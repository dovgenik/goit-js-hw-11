import"./assets/modulepreload-polyfill-B5Qt9EMX.js";import{a as n,i as c,S as m}from"./assets/vendor-D5mnuR-h.js";const e={searchText:"",carrentPage:1,pageLen:20,maxItems:60,direction:"toBottom"};let i;function s(r,l,o){l>0&&o>0&&n.get("https://pixabay.com/api/",{params:{key:"49309273-01bbbdbc5dd72a8afdb67bc06",q:r,image_type:"photo",orientation:"horizontal",safesearch:!0,page:l,per_page:o}}).then(t=>{g(t.data.hits),f()}).catch(t=>{console.log(t)})}function d(){document.querySelector(".gallery").outerHTML='<ul class="gallery"></ul>'}function g(r){if(r.length<1)c.info({message:"Sorry, there are no images matching your search query. Please try again!",close:!0,timeout:5e3,position:"topRight"});else{const l=document.createDocumentFragment(),o=document.querySelector(".gallery");for(const t of r){const a=document.createElement("li");a.classList.add("gallery-item"),a.innerHTML=`<div class="gallery-div">
        <a class="gallery-link" href="${t.largeImageURL}">
          <img class="gallery-image" src="${t.webformatURL}" alt="${t.tags}">
        </a>
      </div>
      <div class="img-footer">
        <div class="footer-item"><p>Likes</p><p>${t.likes}</p></div>
        <div class="footer-item"><p>Views</p><p>${t.views}</p></div>
        <div class="footer-item"><p>Comments</p><p>${t.comments}</p></div>
        <div class="footer-item"><p>Downloads</p><p>${t.downloads}</p></div>
      </div>`,l.appendChild(a)}if(console.log(`Додавав ${e.direction}`),e.direction==="toBottom"){for(console.log(`To bottom ${l}`),o.appendChild(l),console.log(`Галерея after add = ${o.children.length} елементів`);o.children.length>e.maxItems;)o.removeChild(o.firstElementChild);console.log(`Gallery after del from bottom = ${o.children.length} elements`)}else if(e.direction==="toTop"){const t=o.scrollHeight;o.prepend(l);const a=o.scrollHeight;for(window.scrollBy(0,a-t);o.children.length>e.maxItems;)o.removeChild(o.lastElementChild);console.log(`Gallery after del from bottom = ${o.children.length} elements`)}}}function p(){e.runStarted=!0;const r=new IntersectionObserver((l,o)=>{const t={markerTop:!1,markerBottom:!1};l.forEach(a=>{a.isIntersecting&&(console.log(a.target.classList[1]),a.target.classList[1]==="marker-top"?t.markerTop=!0:a.target.classList[1]==="marker-bottom"&&(t.markerBottom=!0))}),t.markerBottom&&!t.markerTop?(e.direction="toBottom",s(e.searchText,++e.carrentPage,e.pageLen)):!t.markerBottom&&t.markerTop&&(e.direction="toTop",e.carrentPage>3&&s(e.searchText,--e.carrentPage-2,e.pageLen)),console.log(t),console.log(`Page = ${e.carrentPage} `)});r.observe(document.querySelector([".marker-top"])),r.observe(document.querySelector([".marker-bottom"]))}function f(){i?i.refresh():i=new m(".gallery a",{captions:!0,captionsData:"alt",captionDelay:250,showCounter:!0,disableScroll:!0,navText:["←","→"],closeText:"×"})}p();document.querySelector(".form").addEventListener("submit",function(r){r.preventDefault(),d(),e.searchText=r.target.elements["search-text"].value,e.direction="toBottom",e.carrentPage=1,s(e.searchText,e.carrentPage,e.pageLen)});
//# sourceMappingURL=index.js.map
