{"version":3,"file":"index.js","sources":["../src/js/render-functions.js","../src/js/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { observerIntersection } from './main.js';\n\nexport { createGalleryItem, deleteGalleryItem};\nlet lightbox;\n\n//**********************************  IntersectionObserver  // поява обєкта в полі видимості*************************************************\nconst callbackIntersection = (entries, observer) => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      console.log(`Елемент \"${entry.target.classList[1]}\" тут`);\n    } else {\n      console.log(`Елемент \"${entry.target.classList[1]}\" пішов геть`);\n    }\n  });\n};\n\n\n\nfunction deleteGalleryItem() {\n  document.querySelector('.gallery').outerHTML = `<ul class=\"gallery\"></ul>`;\n}\n\nfunction createGalleryItem(arrayImgs) {\n  if (arrayImgs.length < 1) {\n    iziToast.info({\n      message:\n        'Sorry, there are no images matching your search query. Please try again!',\n      close: true,\n      timeout: 5000,\n      position: 'topRight',\n    });\n  } else {\n    const fragment = document.createDocumentFragment();\n    const parentUl = document.querySelector('.gallery');\n    \n    for (const element of arrayImgs) {\n      const li = document.createElement('li');\n      li.classList.add('gallery-item');\n      \n      li.innerHTML = `<div class=\"gallery-div\">\n        <a class=\"gallery-link\" href=\"${element.largeImageURL}\">\n          <img class=\"gallery-image\" src=\"${element.webformatURL}\" alt=\"${element.tags}\">\n        </a>\n      </div>\n      <div class=\"img-footer\">\n        <div class=\"footer-item\"><p>Likes</p><p>${element.likes}</p></div>\n        <div class=\"footer-item\"><p>Views</p><p>${element.views}</p></div>\n        <div class=\"footer-item\"><p>Comments</p><p>${element.comments}</p></div>\n        <div class=\"footer-item\"><p>Downloads</p><p>${element.downloads}</p></div>\n      </div>`;\n\n      fragment.appendChild(li);\n    }\n\n    parentUl.appendChild(fragment);\n\n    observerIntersection.observe(document.querySelector(['.marker-top']));\n    observerIntersection.observe(document.querySelector(['.marker-bottom']));\n\n    // Оновлюємо SimpleLightbox після додавання зображень\n    if (lightbox) {\n      lightbox.refresh();\n    } else {\n      lightbox = new SimpleLightbox('.gallery a', {\n        captions: true,\n        captionsData: 'alt',\n        captionDelay: 250,\n        showCounter: true,\n        disableScroll: true,\n        navText: ['←', '→'],\n        closeText: '×',\n      });\n    }\n  }\n}\n\n\n\n//observerIntersection.observe(document.querySelector('.marker'));\n//observerIntersection.observe(document.querySelector('.marker12'));\n","import axios from 'axios';\nimport { createGalleryItem, deleteGalleryItem} from './render-functions.js';\nexport { observerIntersection };\nlet textSearch = 'rhododendron';\nlet pageNum = 1;\nlet pageLen = 40;\n\nfunction axiosCall(text, pageN, pageL) {\n  axios\n    .get('https://pixabay.com/api/', {\n      params: {\n        key: '49309273-01bbbdbc5dd72a8afdb67bc06',\n        q: text,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        page: pageN,\n        per_page: pageL,\n      },\n    })\n    .then(response => {\n      createGalleryItem(response.data.hits);\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n\nconst callbackIntersection = (entries, observer) => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      console.log(`Елемент \"${entry.target.classList[1]}\" тут`);\n    } else {\n      console.log(`Елемент \"${entry.target.classList[1]}\" пішов геть`);\n    }\n  });\n};\n//**********************************\n\nconst observerIntersection = new IntersectionObserver(callbackIntersection);\n\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault();\n  deleteGalleryItem();\n  axiosCall(event.target.elements['search-text'].value, 5, 18);\n});\n\n//***************************************************** \n\n\n\n//axiosCall(textSearch, pageNum, pageLen);\n"],"names":["lightbox","deleteGalleryItem","createGalleryItem","arrayImgs","iziToast","fragment","parentUl","element","li","observerIntersection","SimpleLightbox","axiosCall","text","pageN","pageL","axios","response","error","callbackIntersection","entries","observer","entry","event"],"mappings":"6GAOA,IAAIA,EAeJ,SAASC,GAAoB,CAC3B,SAAS,cAAc,UAAU,EAAE,UAAY,2BACjD,CAEA,SAASC,EAAkBC,EAAW,CACpC,GAAIA,EAAU,OAAS,EACrBC,EAAS,KAAK,CACZ,QACE,2EACF,MAAO,GACP,QAAS,IACT,SAAU,UAChB,CAAK,MACI,CACL,MAAMC,EAAW,SAAS,uBAAwB,EAC5CC,EAAW,SAAS,cAAc,UAAU,EAElD,UAAWC,KAAWJ,EAAW,CAC/B,MAAMK,EAAK,SAAS,cAAc,IAAI,EACtCA,EAAG,UAAU,IAAI,cAAc,EAE/BA,EAAG,UAAY;AAAA,wCACmBD,EAAQ,aAAa;AAAA,4CACjBA,EAAQ,YAAY,UAAUA,EAAQ,IAAI;AAAA;AAAA;AAAA;AAAA,kDAIpCA,EAAQ,KAAK;AAAA,kDACbA,EAAQ,KAAK;AAAA,qDACVA,EAAQ,QAAQ;AAAA,sDACfA,EAAQ,SAAS;AAAA,cAGjEF,EAAS,YAAYG,CAAE,CAC7B,CAEIF,EAAS,YAAYD,CAAQ,EAE7BI,EAAqB,QAAQ,SAAS,cAAc,CAAC,aAAa,CAAC,CAAC,EACpEA,EAAqB,QAAQ,SAAS,cAAc,CAAC,gBAAgB,CAAC,CAAC,EAGnET,EACFA,EAAS,QAAS,EAElBA,EAAW,IAAIU,EAAe,aAAc,CAC1C,SAAU,GACV,aAAc,MACd,aAAc,IACd,YAAa,GACb,cAAe,GACf,QAAS,CAAC,IAAK,GAAG,EAClB,UAAW,GACnB,CAAO,CAEP,CACA,CCvEA,SAASC,EAAUC,EAAMC,EAAOC,EAAO,CACrCC,EACG,IAAI,2BAA4B,CAC/B,OAAQ,CACN,IAAK,qCACL,EAAGH,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,KAAMC,EACN,SAAUC,CACX,CACF,CAAA,EACA,KAAKE,GAAY,CAChBd,EAAkBc,EAAS,KAAK,IAAI,CACrC,CAAA,EACA,MAAMC,GAAS,CACd,QAAQ,IAAIA,CAAK,CACvB,CAAK,CACL,CAEA,MAAMC,EAAuB,CAACC,EAASC,IAAa,CAClDD,EAAQ,QAAQE,GAAS,CACnBA,EAAM,eACR,QAAQ,IAAI,YAAYA,EAAM,OAAO,UAAU,CAAC,CAAC,OAAO,EAExD,QAAQ,IAAI,YAAYA,EAAM,OAAO,UAAU,CAAC,CAAC,cAAc,CAErE,CAAG,CACH,EAGMZ,EAAuB,IAAI,qBAAqBS,CAAoB,EAE1E,SAAS,cAAc,OAAO,EAAE,iBAAiB,SAAU,SAAUI,EAAO,CAC1EA,EAAM,eAAgB,EACtBrB,EAAmB,EACnBU,EAAUW,EAAM,OAAO,SAAS,aAAa,EAAE,MAAO,EAAG,EAAE,CAC7D,CAAC"}